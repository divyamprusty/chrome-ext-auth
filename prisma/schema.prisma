// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model (maps to Supabase auth.users)
model User {
  id            String         @id @default(cuid())
  email         String         @unique
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  chat_sessions ChatSession[]
  chat_messages ChatMessage[]

  @@map("users")
}

// Chat sessions model
model ChatSession {
  id         BigInt    @id @default(autoincrement())
  user_id    String
  title      String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  messages   ChatMessage[]

  @@map("chat_sessions")
}

// Chat messages model
model ChatMessage {
  id         BigInt   @id @default(autoincrement())
  session_id BigInt
  user_id    String
  role       String   // 'user' or 'assistant'
  content    String
  created_at DateTime @default(now())
  session    ChatSession @relation(fields: [session_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}
